---
- name: Ensure the sheepdoge log directory exists.
  file:
    path: "{{ sheepdoge_log_directory }}"
    state: directory
    mode: u+rw

- set_fact:
    sheepdoge_cron_log_path: "{{ sheepdoge_log_directory }}/{{ sheepdoge_cron_log_name }}"

- name: Create the cron file to which sheepdoge cron runs will write.
  file:
    path: "{{ sheepdoge_cron_log_path }}"
    state: touch
    mode: u+rw

# @TODO(mattjmcnaughton) Determine the most idiomatic way to do this.
- set_fact:
    use_virtualenv: "{{ sheepdoge_use_virtualenv_for_cron | bool }}"

- set_fact:
    use_bashrc: "{{ sheepdoge_use_bashrc_for_cron | bool }}"

- name: Check if the kennel is version controlled through git.
  command: git -C "{{ playbook_dir }}" rev-parse
  register: git_check_result
  ignore_errors: True

- set_fact:
    git_update_cmd: "echo 'Git repo not found in {{ playbook_dir }}'"

- set_fact:
    git_update_cmd: "git pull origin master"
  when: git_check_result|succeeded

- name: Run sheepdoge with virtualenv.
  cron:
    name: Run sheepdoge cron.
    minute: "{{ sheepdoge_cron_interval_minutes }}"
    hour: "{{ sheepdoge_cron_interval_hours }}"
    job: >
      source {{ sheepdoge_virtualenv_path }}/bin/activate &&
      cd "{{ playbook_dir }}" &&
      {{ git_update_cmd }} &&
      bash -c "sheepdoge install && sheepdoge run --run-mode cron" >>
      {{ sheepdoge_cron_log_path }} 2>&1
  when: use_virtualenv and not use_bashrc
  notify: restart cron

- name: Run sheepdoge with bashrc.
  cron:
    name: Run sheepdoge cron.
    minute: "{{ sheepdoge_cron_interval_minutes }}"
    hour: "{{ sheepdoge_cron_interval_hours }}"
    job: >
      cd "{{ playbook_dir }}" &&
      {{ git_update_cmd }} &&
      bash -c ". ~/.bashrc && sheepdoge install && sheepdoge run --run-mode cron" >>
      {{ sheepdoge_cron_log_path }} 2>&1
  when: use_bashrc and not use_virtualenv
  notify: restart cron

- name: Run sheepdoge without virtualenv or bashrc.
  cron:
    name: Run sheepdoge cron.
    minute: "{{ sheepdoge_cron_interval_minutes }}"
    hour: "{{ sheepdoge_cron_interval_hours }}"
    job: >
      cd "{{ playbook_dir }}" &&
      {{ git_update_cmd }} &&
      bash -c "sheepdoge install && sheepdoge run --run-mode cron" >>
      {{ sheepdoge_cron_log_path }} 2>&1
  when: not use_virtualenv and not use_bashrc
  notify: restart cron
